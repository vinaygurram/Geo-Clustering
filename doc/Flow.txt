Clustering Design :

Elastic search indexes
Indexes : GeoHash Index, Clusters Index, Products Index
GeoHash Index :
	 id, Geo hash, List<ClusterId,distance,status(Off/On),rank>, totalProducts, totalSubCat
Cluster Index :
	id, catalog_tree, product_count, sub_cat_count, store_ids

 Product Index :  (Same as Listing index)
	pid, attributes, storeId

 Stores Index : (Same as stores Index)
	id, name, location

API Calls
Customer APP —> Get Super cat & Cat   (Input :: Geo hash)
        :: Get best cluster id from GeoHashIndex
        :: Get catalog_tree from ClusterIndex
        :: Return tree
Customer APP —> Get SubCat  (Input :: geoHash, CategoryId, SuperCategory Id)
        ::Get best Cluster id for from GeoHashIndex
        :: Get catalog_tree using Cluster Id from Cluster Index
        :: Filter the sub_cat from catalog tree
        :: return final sub_cat list
Customer APP  —> Get Products (Input :: ClusterId, SubCat Id)
        :: Get ShopList from ClusterIndex
        :: Fire ES query on Product Index with extra filter of shops (Reduction of duplicates)
Fulfillment Stores—> Get Stores from given product  (Input :: key/values, cluster_id)
        :: See if the stores in the cluster fulfill if yes return the stores
        :: No? Hit the ProductIndex
Fulfillment Shippers —> No changes
Search API —> No changes

Tech Stack
Web Server —> Jetty/Tomcat
 Language —> Java
DB —> ES